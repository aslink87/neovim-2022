WITH stations_in_range AS (SELECT station.id,
                                  system_id,
                                  arrival_distance
                           FROM public.station
                                    INNER JOIN system ON station.system_id = system.id
                           WHERE st_3ddwithin((select coordinates_geom
                                               from system
                                               where system.name = 'Sol'), coordinates_geom, 300)
                             AND arrival_distance < 5000
                             AND station.name NOT SIMILAR TO '[A-Za-z0-9]{3}-[A-Za-z0-9]{3}'),

     stations_in_system AS (select station.id,
                                   station.system_id,
                                   station.arrival_distance
                            FROM station
                                     INNER JOIN system ON station.system_id = system.id AND system.name = 'Sol'),

     commodity_list AS (
         SELECT id, display_name, is_rare
         FROM commodity
--          WHERE display_name IN ('Gold', 'Palladium')
         WHERE display_name IS NOT NULL
     ),

     buy_market AS (SELECT commodity_id,
                           station_id                                                           as buy_station_id,
                           arrival_distance                                                     AS buy_arrival_distance,
                           MIN(buy_price) OVER (PARTITION BY commodity_id)                      AS min_buy_price,
                           buy_price,
                           coordinates_geom,
                           arrival_distance,
                           stock,
                           ROW_NUMBER() OVER (PARTITION BY commodity_id ORDER BY buy_price ASC) AS rn
                    FROM latest_market_datum buy
                             INNER JOIN stations_in_range ON station_id = stations_in_range.id
                             INNER JOIN system ON stations_in_range.system_id = system.id
                             INNER JOIN commodity_list ON commodity_id = commodity_list.id AND display_name IS NOT null
                    WHERE stock > 10000
                      AND commodity_list.is_rare = false
                      AND timestamp >= (now() - INTERVAL '3 days')
                      AND buy_price IS NOT null),

     sell_market AS (SELECT commodity_id,
                             station_id                                                             as sell_station_id,
                             arrival_distance                                                       AS sell_arrival_distance,
                             sell_price,
                             coordinates_geom,
                             arrival_distance,
                             demand
                      FROM latest_market_datum sell
                               INNER JOIN stations_in_system ON station_id = stations_in_system.id
                               INNER JOIN system on stations_in_system.system_id = system.id
                               INNER JOIN commodity ON commodity_id = commodity.id AND display_name IS NOT null
                      WHERE (demand = 0 OR demand > (720 * 4))
                        AND commodity.is_rare = false
                        AND timestamp >= (now() - INTERVAL '3 days'))

SELECT buy_market.commodity_id,
       buy_market.buy_station_id,
       buy_market.buy_price,
       buy_market.stock,
       sell_market.sell_station_id,
       sell_market.sell_price,
       sell_market.demand,
       (sell_market.sell_price - buy_market.buy_price)                          AS profit,
       st_3ddistance(buy_market.coordinates_geom, sell_market.coordinates_geom) AS route_distance
FROM buy_market
         INNER JOIN sell_market ON buy_market.commodity_id = sell_market.commodity_id
    AND st_3ddwithin(sell_market.coordinates_geom, buy_market.coordinates_geom, 80)
    AND buy_market.buy_station_id != sell_market.sell_station_id
    AND buy_market.rn <= 100
WHERE (sell_market.sell_price - buy_market.buy_price) > 0
ORDER BY profit DESC, buy_market.arrival_distance + sell_arrival_distance
